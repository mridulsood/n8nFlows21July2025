{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Chat Response1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WordPressContentAIAgent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "TrendingTopicAIAgent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "LongTermMemoryAIAgent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-23T08:31:54.379Z",
  "id": "ZOKu4OtNsQJhy7hy",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "01 Blog: Routing Agent",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -40,
        -780
      ],
      "id": "76e91837-94b8-431a-8204-62e28e60eb94",
      "name": "When chat message received",
      "webhookId": "2042e1a4-6d50-4c64-916b-00fe60e743eb"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are the RoutingAndConversationAIAgent.\n\nROLE:\n- Understand user requests.\n- Retrieve relevant memories and notes.\n- Route the request to the appropriate AI Agent based on intent.\n- Maintain conversation context and clarity in responses.\n\nTOOLS YOU CAN USE:\n\n1. LongTermMemoryAIAgent \n   - Manage, retrieve, and store long-term user memories and notes.\n   - Tool: GetLongTermMemories ‚Äì retrieves past memories and facts.  \n   - Tool: SaveLongTermMemories ‚Äì stores new facts and learnings.  \n   - Tool: GetNotes ‚Äì retrieves user notes.  \n   - Tool: SaveNotes ‚Äì saves short-term or custom notes.  \n\n2. TrendingTopicAIAgent  \n   - Generates trending blog topics based on current trends and user context.\n\n3. WordPressContentAIAgent  \n   - Writes and posts blog content using provided trending topics and user context.\n   - Tool: CreatePost - Publishes a new blog post to WordPress using provided content, title, tags, and optional metadata.\n\nHOW TO WORK:\n\n1. **Understand the User Intent:**\n   - Interpret the user's request clearly and naturally.\n   - Refine and rewrite the input if needed for clarity and precision.\n\n2. **Use Long-Term Memory (Always at Start):**\n   - Use GetLongTermMemories and GetNotes.\n   - Merge both into a `context` block.\n   - Include this `context` in every routing decision and tool invocation.\n   - Do not fallback or reply with \"tools not available\" if these are present.\n\n3. **Route the Request:**\n   - If the user asks to **generate blog ideas**, use TrendingTopicAIAgent.\n   - If the user asks to **write or post content**, use WordPressContentAIAgent.\n   - If the user shares a **fact or update**, store it using SaveLongTermMemories or SaveNotes.\n   - If unsure, ask clarifying questions before routing.\n\n4. **Reply Back to the User:**\n   - Confirm what action was taken.\n   - Ask about the next step.\n   - Keep it casual and helpful.\n\nRULES:\n- Always fetch memory and notes before acting.\n- Never default to fallback if routing is possible with the tools.\n- Do not expose internal tool names unless needed.\n- Avoid scrollbars, markdown blocks, or hidden outputs in responses.\n\nROUTING FORMAT (internal):\n{\n  \"task\": \"User request (cleaned)\",\n  \"context\": \"Merged memory and notes\",\n  \"input\": \"Context-aware refined input for downstream agent\"\n}\n\nEXAMPLE 1:\nUser: \"Give me trending hospital blog ideas\"\n‚Üí Fetch memory/notes (e.g., hospital consultant)\n‚Üí Send to TrendingTopicAIAgent with refined input:  \n  ‚ÄúGenerate trending blog topics for a hospital consulting business.‚Äù\n\nEXAMPLE 2:\nUser: \"Write and post this article\"\n‚Üí Fetch memory\n‚Üí Send to WordPressContentAIAgent with context and input content.\n\nEXAMPLE 3:\nUser: \"Remember I run a plywood business\"\n‚Üí Save using SaveLongTermMemories: ‚ÄúUser runs a plywood business.‚Äù\n\nRespond like:\n- ‚úÖ ‚ÄúHere are some trending topics...‚Äù\n- ‚úÖ ‚ÄúDone! Article posted.‚Äù\n- üí° ‚ÄúGot it! I‚Äôve saved that.‚Äù\n\nStay sharp, context-aware, and user-friendly."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        340,
        -780
      ],
      "id": "93c9a93a-6a11-4751-86b9-4453ba8f054d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        120,
        -420
      ],
      "id": "e3f0e113-3769-4987-9717-e01b65d6c324",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "a5oyPAwibiOEyC8n",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d6f68b1c-a6a6-44d4-8686-dc4dcdde4767",
              "name": "output",
              "type": "string",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f2607cdb-88ab-4273-9dde-f4d88020f478",
      "name": "Chat Response1",
      "type": "n8n-nodes-base.set",
      "position": [
        740,
        -780
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "name": "WordPressContentAIAgent",
        "workflowId": {
          "__rl": true,
          "value": "FnegSGWoMwGFPRo4",
          "mode": "list",
          "cachedResultName": "My Sub-Workflow 1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1000,
        -400
      ],
      "id": "fcd68121-c29e-4d3c-8cd5-b3d5ab78f734",
      "name": "WordPressContentAIAgent"
    },
    {
      "parameters": {
        "name": "TrendingTopicAIAgent",
        "workflowId": {
          "__rl": true,
          "value": "ftHYZlwfdDxkLP6P",
          "mode": "list",
          "cachedResultName": "03 Blog: Trending Topic AI Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        800,
        -400
      ],
      "id": "748c59ad-04a6-4139-ab9c-57c4b8549bd7",
      "name": "TrendingTopicAIAgent"
    },
    {
      "parameters": {
        "name": "LongTermMemoryAIAgent",
        "workflowId": {
          "__rl": true,
          "value": "eM3oFOG21TXQIVp8",
          "mode": "list",
          "cachedResultName": "02 Blog: Long-Term Memory Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        620,
        -400
      ],
      "id": "5ebf21fe-7b4b-4877-93ca-e16d9560794a",
      "name": "LongTermMemoryAIAgent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        460,
        -400
      ],
      "id": "c5aafbb4-834d-41de-8402-f9006d95fbac",
      "name": "Window Buffer Memory"
    }
  ],
  "pinData": {},
  "repo_name": "n8nFlows21July2025",
  "repo_owner": "mridulsood",
  "repo_path": "https://github.com/mridulsood/n8nFlows21July2025.git",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-24T07:41:48.000Z",
  "versionId": "828e698f-50bc-4f70-89e4-49bf52852ad5"
}